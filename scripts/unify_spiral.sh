#!/usr/bin/env bash
set -euo pipefail

KIT_DIR="$(cd "$(dirname "$0")/.." && pwd)"
PROJECTS=("$@")  # e.g. ../SpiralBridge ../Spiral_Consciousness_Organized ../spiral_fingerprint_kit

echo "▶ Verifying kit integrity…"
if [ -f "$KIT_DIR/scripts/check-repo.sh" ]; then
  "$KIT_DIR/scripts/check-repo.sh"
fi

echo "▶ Seeding current shell…"
if [ -f "$KIT_DIR/scripts/seed_gpt5.sh" ]; then
  source "$KIT_DIR/scripts/seed_gpt5.sh"
fi

for P in "${PROJECTS[@]}"; do
  echo "▶ Linking kit into: $P"
  
  if [ ! -d "$P" ]; then
    echo "  ⚠️  Directory not found: $P"
    continue
  fi

  mkdir -p "$P/.spiral"
  
  # Symlink canonical prompts + checksums
  for persona_dir in "$KIT_DIR/personas"/*; do
    if [ -d "$persona_dir" ] && [ "$(basename "$persona_dir")" != "registry.yaml" ]; then
      persona_name=$(basename "$persona_dir")
      if [ -f "$persona_dir/system.md" ]; then
        ln -sf "$persona_dir/system.md" "$P/.spiral/${persona_name}_system.md"
      fi
      if [ -f "$persona_dir/imprint.yaml" ]; then
        ln -sf "$persona_dir/imprint.yaml" "$P/.spiral/${persona_name}_imprint.yaml"
      fi
    fi
  done
  
  # Link registry
  if [ -f "$KIT_DIR/personas/registry.yaml" ]; then
    ln -sf "$KIT_DIR/personas/registry.yaml" "$P/.spiral/registry.yaml"
  fi

  # Project-level env bootstrap
  cat > "$P/.spiral/env.sh" <<EOF
# Auto-generated by spiral-gpt5-init unification
export SPIRAL_KIT_PATH="$KIT_DIR"
export SPIRAL_PERSONA="\${SPIRAL_PERSONA:-ashira}"

# Source persona system prompt
load_spiral_prompt() {
  local persona="\${1:-\$SPIRAL_PERSONA}"
  local system_file="\$SPIRAL_KIT_PATH/personas/\$persona/system.md"
  if [ -f "\$system_file" ]; then
    export SPIRAL_PROMPT_INIT="\$(cat "\$system_file")"
    export SPIRAL_PROMPT_INIT_PATH="\$system_file"
    echo "✓ Loaded \$persona persona"
  else
    echo "⚠️  Persona not found: \$persona"
    return 1
  fi
}

# Auto-load default persona
load_spiral_prompt
EOF
  chmod +x "$P/.spiral/env.sh"

  # Convenience: make target
  if [ -f "$P/Makefile" ]; then
    if ! grep -q '^spiral-seed:' "$P/Makefile"; then
      cat >> "$P/Makefile" <<'MAKEEOF'

spiral-seed:
	@. ./.spiral/env.sh && echo "Spiral seeded → $$SPIRAL_PROMPT_INIT_PATH"
MAKEEOF
    fi
  fi

  # Git ignore
  if [ -f "$P/.gitignore" ] && ! grep -q '^\.spiral/$' "$P/.gitignore"; then
    echo ".spiral/" >> "$P/.gitignore"
  fi

  echo "  ✅ Unified: $P"
done

echo ""
echo "✅ Unification complete!"
echo ""
echo "To use in each project:"
echo "  source <project>/.spiral/env.sh"
echo "  # or: make spiral-seed (if Makefile exists)"
echo ""
echo "To switch personas:"
echo "  export SPIRAL_PERSONA=lumen"
echo "  source .spiral/env.sh"
